{"ast":null,"code":"function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/**\n * @internal These variables should not appear in the :root stylesheet when the `defaultMode=\"dark\"`\n */\nvar excludeVariablesFromRoot = function excludeVariablesFromRoot(cssVarPrefix) {\n  return [].concat(_toConsumableArray(_toConsumableArray(Array(24)).map(function (_, index) {\n    return \"--\".concat(cssVarPrefix ? \"\".concat(cssVarPrefix, \"-\") : '', \"overlays-\").concat(index + 1);\n  })), [\"--\".concat(cssVarPrefix ? \"\".concat(cssVarPrefix, \"-\") : '', \"palette-AppBar-darkBg\"), \"--\".concat(cssVarPrefix ? \"\".concat(cssVarPrefix, \"-\") : '', \"palette-AppBar-darkColor\")]);\n};\nexport default excludeVariablesFromRoot;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}